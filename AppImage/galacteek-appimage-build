#!/bin/bash
#
# AppImage builder with Miniconda3
#
# You need to run "make dists" before running the script
#

MINICONDA_DIST="Miniconda3-4.6.14-Linux-x86_64.sh"
GOIPFS_TGZ="go-ipfs_v0.4.21_linux-amd64.tar.gz"
GOIPFS_DISTURL="https://dist.ipfs.io/go-ipfs/v0.4.21/${GOIPFS_TGZ}"

if [ $# -lt 1 ]; then
    G_VERSION=$(grep '__version__' ../galacteek/__init__.py|sed -e "s/__version__\s=\s'\(.*\)'$/\1/")
else
    G_VERSION=$1
fi

echo "Building AppImage for version: ${G_VERSION}"

if ! [ -e $MINICONDA_DIST ]; then
    wget "https://repo.continuum.io/miniconda/${MINICONDA_DIST}"
fi

if ! [ -e $GOIPFS_TGZ ]; then
    wget $GOIPFS_DISTURL
fi

tar -C /tmp -xzvf ${GOIPFS_TGZ}

APPDIR="galacteek.AppDir.${G_VERSION}"
PIP=$APPDIR/usr/bin/pip
WHEEL=../dist/galacteek-$G_VERSION-py3-none-any.whl

if ! [ -e $WHEEL ]; then
    echo "Wheel for version $G_VERSION does not exist, run make dists"
    exit 1
fi

if [ -e $APPDIR ]; then
    echo "$APPDIR already exists"
else
    mkdir -p $APPDIR
    mkdir -p $APPDIR/usr/share/applications
    mkdir -p $APPDIR/usr/share/metainfo
    mkdir -p $APPDIR/usr/share/icons/hicolor/512x512/apps
fi

if ! [ -e $PIP ]; then
    echo "Installing miniconda"
    bash Miniconda3-4.6.14-Linux-x86_64.sh -b -p "$APPDIR"/usr -f
else
    echo "Miniconda found, continuing"
fi

# Enter the venv
. "$APPDIR"/usr/bin/activate

# Install the wheel from local dists

echo "Installing wheel: $WHEEL"
$PIP install --force-reinstall $WHEEL

cp ../galacteek.desktop $APPDIR/usr/share/applications
cp ../galacteek.desktop $APPDIR
cp ../galacteek.appdata.xml $APPDIR/usr/share/metainfo
cp ../share/icons/galacteek.png $APPDIR
cp ../share/icons/galacteek.png $APPDIR/usr/share/icons/hicolor/512x512/apps
cp /tmp/go-ipfs/ipfs $APPDIR/usr/bin

# Remove unnecessary stuff
pushd "$APPDIR"/usr

rm -rf pkgs
find -type d -iname '__pycache__' -print0 | xargs -0 rm -r

# Strip everything but the Pillow shared libs
find . -type f -not \( -path ./lib/python3.7/site-packages/PIL -prune \) -o \
	-name '*.so*' -print -exec strip '{}' \;
find -type f -iname '*.a' -print -delete

rm -rf lib/cmake/
rm -rf include/
rm -rf share/{gtk-,}doc
rm -rf bin/tcl*
rm -rf bin/sqlite*
rm -rf bin/lz*
rm -rf bin/xz*
rm -rf lib/libtcl*
rm -rf lib/libtk*
rm -rf lib/tk*
rm -rf lib/tcl*
rm -rf lib/sqlite*
rm -rf lib/python3.7/site-packages/Cryptodome/SelfTest/*
rm -rf lib/python3.7/site-packages/PyQt5/Qt/plugins/geoservices
rm -rf lib/python3.7/site-packages/PyQt5/Qt/plugins/sceneparsers
rm -rf lib/python3.7/site-packages/pyzbar/tests
rm -rf lib/python3.7/turtledemo/
rm -rf lib/python3.7/tkinter/
rm -rf lib/python3.7/lib2to3/
rm -rf share/man
rm -rf share/readline
rm -rf share/terminfo
rm -rf share/info
rm -rf ssl/man

# QT
TSL_PATH=./lib/python3.7/site-packages/PyQt5/Qt/translations
find $TSL_PATH -type f -not -iname "*en*" -a -not -iname "*es*" \
	-a -not -iname "*fr*" -exec rm {} \;

rm -rf lib/python3.7/site-packages/PyQt5/Qt/plugins/sqldrivers
find lib/python3.7/site-packages/PyQt5/Qt/qml/ -name *.qml -exec rm {} \;
find lib/python3.7/site-packages/PyQt5/Qt/qml/ -name *.qmlc -exec rm {} \;
find lib/python3.7/site-packages/PyQt5/Qt/qml/QtQuick -exec rm {} \;
find lib/python3.7 -name tests -exec rm -rf {} \;

popd

# Copy the AppRun

cp AppRun $APPDIR/AppRun
chmod 755 $APPDIR/AppRun

sed -i -e 's/#\!\/.*$/#!\//' $APPDIR/usr/bin/galacteek

wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
chmod +x appimagetool*.AppImage

echo "AppDir successfully created, running appimagetool"
ARCH=x86_64 ./appimagetool-x86_64.AppImage -n $APPDIR Galacteek-${G_VERSION}-x86_64.AppImage
